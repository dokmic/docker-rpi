#!/usr/bin/expect

proc env {name {default ""}} {
  if {![info exists ::env($name)] || $::env($name) eq ""} {
    return $default
  }

  return $::env($name)
}

set root /media/sd
set boot $root/boot/firmware
set config_kernel $boot/cmdline.txt
set config_ssh $boot/ssh.txt
set config_user $boot/userconf.txt

set command [string cat \
  [if {$argc} {subst init=}] \
  [join [lmap arg $argv {string cat \" [string map {\" \"\"} $arg] \"}] " "]
]

set cpu [switch [env RPI_ARCH] {
  arm {subst ""}
  default {subst cortex-a72}
}]

set port [join [lmap port [split [env RPI_PORT 22/tcp] " "] {
  if {$port == ""} {
    continue
  }
  lassign [split [string trim $port] "/"] port protocol
  subst "hostfwd=$protocol\::$port-:$port"
}] ","]

if {![file exists $config_ssh] && [string is true [env RPI_SSH true]]} {
  exec touch $config_ssh
}

if {![file exists $config_user]} {
  exec echo "[env RPI_USER pi]:[exec openssl passwd -1 -stdin <<[env RPI_PASSWORD raspberry]]" >$config_user
}

while {true} {
  set panic_code 0
  set reboot false

  spawn -noecho qemu-system-[env RPI_ARCH aarch64] \
    -serial mon:stdio \
    -nographic \
    -no-reboot \
    -machine virt \
    {*}[if {$cpu != ""} {subst "-cpu $cpu"}] \
    -m [env RPI_RAM 1G] \
    -smp [env RPI_CPU 4] \
    -device virtio-net-device,netdev=net0 \
    -netdev user,id=net0[if {$port != ""} {subst ,$port}] \
    -kernel $boot/qemu.img \
    -virtfs local,id=boot,mount_tag=boot,multidevs=remap,path=$boot,security_model=none,writeout=immediate \
    -virtfs local,id=root,mount_tag=root,multidevs=remap,path=$root,security_model=none,writeout=immediate \
    -append "[exec cat $config_kernel] $command panic=-1"

  match_max 1048576
  interact {
    -o -reset

    -nobuffer "reboot: Restarting system" {
      set reboot true
      expect eof
      return
    }

    -nobuffer -re {^\[\s*[\d\.]+\]\s+Kernel panic - not syncing: Requested init .* failed \(error (-?\d+)\)\.} {
      set panic_code $interact_out(1,string)
      expect eof
      return
    }

    -nobuffer -re {^\[\s*[\d\.]+\]\s+Kernel panic - not syncing: Attempted to kill init! exitcode=(0x[\da-f]+)[^\da-f]} {
      set panic_code [expr "$interact_out(1,string)>>8"]
      expect eof
      return
    }
  }

  if {$panic_code != 0} {
    exit $panic_code
  }

  lassign [wait] pid spawn_id os_error exit_code

  if {$exit_code != 0 || !$reboot} {
    exit $exit_code
  }
}
